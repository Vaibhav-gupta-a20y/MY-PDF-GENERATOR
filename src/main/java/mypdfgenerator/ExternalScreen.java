/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mypdfgenerator;

/**
 *
 * @author Dhrit pc
 */
public class ExternalScreen extends javax.swing.JFrame {

    /**
     * Creates new form ExteranlScreen
     */
    public ExternalScreen() {
        initComponents();
        new ScreenOpening(new OptionsScreen());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        WordMenuItem = new javax.swing.JMenuItem();
        textMenuItem = new javax.swing.JMenuItem();
        pdfMenuItem = new javax.swing.JMenuItem();
        imageMenuItem = new javax.swing.JMenuItem();
        htmlMenuItem = new javax.swing.JMenuItem();
        splitMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileMenu.setMnemonic('f');
        fileMenu.setText("Convert");
        fileMenu.setFont(new java.awt.Font("Segoe UI Symbol", 1, 14)); // NOI18N

        WordMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        WordMenuItem.setMnemonic('o');
        WordMenuItem.setText("WordToPdf");
        WordMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WordMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(WordMenuItem);

        textMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        textMenuItem.setMnemonic('s');
        textMenuItem.setText("TextToPdf");
        textMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(textMenuItem);

        pdfMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        pdfMenuItem.setMnemonic('a');
        pdfMenuItem.setText("PdfToPdf");
        pdfMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(pdfMenuItem);

        imageMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        imageMenuItem.setMnemonic('x');
        imageMenuItem.setText("ImageToPdf");
        imageMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(imageMenuItem);

        htmlMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        htmlMenuItem.setText("HtmlToPdf");
        htmlMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                htmlMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(htmlMenuItem);

        splitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        splitMenuItem.setText("SplitPdf");
        splitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(splitMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1100, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imageMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageMenuItemActionPerformed
        
        new ScreenOpening(new ImageToPdf());
    }//GEN-LAST:event_imageMenuItemActionPerformed

    private void WordMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WordMenuItemActionPerformed
        
        new ScreenOpening(new WordToPdf());
    }//GEN-LAST:event_WordMenuItemActionPerformed

    private void textMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textMenuItemActionPerformed
       
        new ScreenOpening(new TexttoPdf());
    }//GEN-LAST:event_textMenuItemActionPerformed

    private void pdfMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfMenuItemActionPerformed
        
        new ScreenOpening(new PdfToPdf());
    }//GEN-LAST:event_pdfMenuItemActionPerformed

    private void htmlMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_htmlMenuItemActionPerformed
            
        
    }//GEN-LAST:event_htmlMenuItemActionPerformed

    private void splitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitMenuItemActionPerformed
        
         new ScreenOpening(new PdfSplitter());
    }//GEN-LAST:event_splitMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExternalScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExternalScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExternalScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExternalScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExternalScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem WordMenuItem;
    public static javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem htmlMenuItem;
    private javax.swing.JMenuItem imageMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem pdfMenuItem;
    private javax.swing.JMenuItem splitMenuItem;
    private javax.swing.JMenuItem textMenuItem;
    // End of variables declaration//GEN-END:variables

}
